{"version":3,"sources":["utils/api.js","utils/auth.js","components/Signup.js","components/Login.js","components/Header.js","components/pages/Creategroup.js","components/pages/Dashboard.js","components/pages/Groupchat.js","components/pages/Updategroup.js","components/pages/chat.js","components/Container.js","App.js","index.js"],"names":["fetchGroups","user","a","fetch","method","headers","fetchGroup","id","fetchUser","fetchChats","fetchUsers","createGroup","groupData","body","JSON","stringify","updateGroup","updategroupData","deleteGroup","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","SignupForm","useState","username","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","currentTarget","checkValidity","stopPropagation","userData","credentials","response","ok","Error","json","finalUser","Auth","recordLogin","console","error","className","Form","style","width","border","boxShadow","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","href","backgroundColor","color","fontWeight","LoginForm","Header","handleLogout","logout","then","replace","loggedIn","fontSize","textDecoration","textTransform","onClick","Creategroup","createGroupName","setCreateGroupName","allUsers","setAllUsers","selectedUsers","setSelectedUsers","useEffect","userFetch","userFetchData","options","map","item","_id","groupname","users","alert","group","log","as","multiple","i","l","length","selected","push","Dashboard","props","groups","setGroups","getGroupsData","groupFetch","groupFetchData","certainGroupClick","e","newid","trim","class","card","index","Card","Body","Title","Groupchat","useParams","chat","setChat","generatedContent","setgeneratedContent","input","setInput","groupTitle","setGroupTitle","anime","targets","translateX","background","endDelay","loop","easing","direction","getChatData","chatsFetch","chatsFetchData","getUsername","userid","singleUser","singleUserData","renderCard","getGroupData","parse","Promise","all","xyz","deleteGroupClick","createChatClick","data","borderRadius","padding","maxHeight","element","controlId","Updategroup","updateGroupName","setUpdateGroupName","Example","showChatbox","showIcon","messages","text","timestamp","author","avatarUrl","attr","setAttr","chatbox","onSendMessage","message","concat","userId","showTypingIndicator","activeAuthor","clickIcon","iconStyle","fill","Container","exact","path","Login","Signup","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75c9b511.chunk.js","sourcesContent":["export const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n    return fetch('/api/user/signup', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData)\n    });\n  };\n  \n  export const userLogin = (userData) => {\n    return fetch('/api/user/', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n\n  export const fetchGroups = async(user) => {\n    return await fetch('/api/group/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };\n\n  export const fetchGroup = (id) => {\n    return fetch(`/api/group/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };\n\n  export const fetchUser = (id) => {\n    return fetch(`/api/user/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };\n\n  export const fetchChats = (id) => {\n    return fetch(`/api/chat/${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };\n\n  export const fetchUsers = () => {\n    return fetch('/api/user/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };\n\n  //Create group data\n  export const createGroup = (groupData) => {\n    return fetch('/api/group/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(groupData)\n    });\n  }\n\n  //Update Group\n  export const updateGroup = (updategroupData,id) => {\n    return fetch('/api/group/' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updategroupData)\n    });\n  }\n\n  //Delete group\n  export const deleteGroup = (id) => {\n    return fetch('/api/group/' + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(deleteGroup)\n    });\n  }\n\n  //Create chat\n  export const createChat = (data) => {\n    return fetch('/api/chat/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    });\n  };\n\n  export const userLogout = (userData) => {\n    return fetch('/api/user/logout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n  };","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return (!!token && !this.isTokenExpired(token));\n  }\n\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  recordLogin(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/dashboard');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n  }\n}\n\nexport default new AuthService();\n\n ","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { createUser } from '../utils/api';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    password: '',\n  });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const user = await response.json();\n      const finalUser = await user;\n      Auth.recordLogin(finalUser.token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"d-flex justify-content-center p-4\">\n          <Form style={{ width: \"30rem\", border: \".5rem solid #539987\", boxShadow: \"5px 5px 10px gray\" }} noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Alert\n              dismissible\n              onClose={() => setShowAlert(false)}\n              show={showAlert}\n              variant=\"danger\"\n            >\n              Something went wrong with your signup!\n            </Alert>\n\n            <Form.Group className='p-4'>\n              <Form.Label htmlFor=\"username\">Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                onChange={handleInputChange}\n                value={userFormData.username}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Username is required!\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group className='p-4'>\n              <Form.Label htmlFor=\"password\">Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Your password\"\n                name=\"password\"\n                onChange={handleInputChange}\n                value={userFormData.password}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Password is required!\n              </Form.Control.Feedback>\n            </Form.Group>\n            <div className=\"p-4 d-flex justify-content-center\">\n              <Button\n                disabled={\n                  !(\n                    userFormData.username &&\n                    userFormData.password\n                  )\n                }\n                type=\"submit\"\n                variant=\"secondary\"\n              >\n                Sign-up!\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            href=\"/\"\n            type=\"submit\"\n            style={{ backgroundColor: \"#b490ca\", color: \"white\", fontWeight: \"bold\", border: \"none\" }}\n          >\n            Login Instead\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignupForm;","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { userLogin } from '../utils/api';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ username: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await userLogin(userFormData);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      Auth.recordLogin(token);\n\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"d-flex justify-content-center p-4\">\n          <Form style={{ width: \"30rem\", border: \".5rem solid #539987\", boxShadow: \"5px 5px 10px gray\" }} noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Alert\n              dismissible\n              onClose={() => setShowAlert(false)}\n              show={showAlert}\n              variant=\"danger\"\n            >\n              Something went wrong with your login credentials!\n            </Alert>\n            <Form.Group className=\"p-4\">\n              <Form.Label htmlFor=\"username\">Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Your username\"\n                name=\"username\"\n                onChange={handleInputChange}\n                value={userFormData.username}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Username is required!\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group className=\"p-4\">\n              <Form.Label htmlFor=\"password\">Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Your password\"\n                name=\"password\"\n                onChange={handleInputChange}\n                value={userFormData.password}\n                required\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Password is required!\n              </Form.Control.Feedback>\n            </Form.Group>\n            <div className=\" p-4 d-flex justify-content-center\">\n              <Button\n                className=\"d-flex justify-content-center\"\n                disabled={!(userFormData.username && userFormData.password)}\n                type=\"submit\"\n                variant=\"secondary\"\n              >\n                Login\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"d-flex justify-content-center\">\n          <Button\n            href=\"/signup\"\n            type=\"submit\"\n            style={{ backgroundColor: \"#b490ca\", color: \"white\", fontWeight: \"bold\", border: \"none\" }}\n          >\n            Sign-Up Instead\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;","import React from \"react\";\nimport { FaHome, FaRegWindowClose } from 'react-icons/fa';\nimport Auth from '../utils/auth';\nimport { userLogout } from \"../utils/api\";\n\nexport default function Header() {\n\n    const renderHome = () => {\n        if (Auth.loggedIn()) {\n            return <a href=\"/dashboard\"\n                style={{ fontSize: \"18px\", textDecoration: \"none\", textTransform: \"uppercase\", color: \"white\" }}>\n                <div className=\"bi d-flex justify-content-center mx-auto mb-1\">\n                    <FaHome style={{ fontSize: \"2.5rem\", color: \"white\" }} />\n                </div>\n                Home\n            </a>;\n        }\n        else return;\n    };\n\n    const handleLogout = () => {\n        Auth.logout();\n        userLogout().then(response => {\n            window.location.replace(\"/\")\n        })\n\n    }\n    \n    const renderLogout = () => {\n        if (Auth.loggedIn()) {\n            return <a href=\"#\"\n                onClick={handleLogout}\n                style={{ fontSize: \"18px\", textDecoration: \"none\", textTransform: \"uppercase\", color: \"white\" }}>\n                <div className=\"bi d-flex justify-content-center mx-auto mb-1\">\n                    <FaRegWindowClose style={{ fontSize: \"2.5rem\", color: \"white\" }} />\n                </div>\n                Logout\n            </a>;\n        }\n        else return;\n    };\n\n    return (\n        <header style={{ backgroundColor: \"#539987\", color: \"white\" }}>\n            <div className=\"px-3 py-2\" id=\"header\">\n                <div className=\"container row\">\n                    <div className=\"col-md-12 col-lg-5 d-flex align-items-center justify-content-center\">\n                        <h1 id=\"header-name\">Friendly Group Chats</h1>\n                    </div>\n                    <div className=\"d-flex col-md-12 col-lg-7 justify-content-center\">\n                        <div className=\"p-4\">\n                            {renderHome()}\n                        </div>\n                        <div className=\"p-4\">\n                            {renderLogout()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n}","import React, {useState, useEffect } from \"react\";\nimport { fetchUsers ,createGroup} from '../../utils/api';\nimport { Form, Button } from 'react-bootstrap';\n\nexport default function Creategroup() {\n  const [createGroupName, setCreateGroupName] = useState(\"\");\n  const [allUsers, setAllUsers]=useState([])\n  const [selectedUsers, setSelectedUsers]=useState([])\n  const [validated] = useState(false);\n\n  useEffect( async () => {\n    let userFetch = await fetchUsers();\n    let userFetchData = await userFetch.json();    \n\n    // This var should let us have a running list of all the users in the database\n    let options = userFetchData.map((item) => {\n      return (\n        <option key={item._id} value={item._id}>{item.username}\n        </option>\n      )\n    })\n    setAllUsers(options)  \n  } ,[])\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCreateGroupName({ ...createGroupName, [name]: value });\n  };\n\n  \n  const handleFormSubmit = async (event) => {\n   \n    event.preventDefault();\n    const formGroup = event.currentTarget; \n\n    if(formGroup.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n\n    try {\n      var name = JSON.stringify(createGroupName.groupname);\n      var users = selectedUsers;\n      \n      var groupData = {name,users}\n     \n      const response = await createGroup( groupData)\n      alert(\"Group created!\");\n      window.location.href=\"/dashboard\";\n\n      if (!response.ok) {\n              throw new Error('Something went wrong!');\n            }\n            const group  = await response.json();\n            const finalGroup = await group;\n            \n          } catch (e) {\n            console.log(\"Error\")\n            // setShowAlert(true);\n          }\n          setCreateGroupName(createGroupName)\n          setSelectedUsers(selectedUsers)\n        }\n\n  const handleUserChange=  (event) => {\n    var options = event.target.options;\n    var value = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setSelectedUsers(value);\n  }\n\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"p-4 d-flex justify-content-center\">\n            <Form className=\"p-4\" style={{ width: \"30rem\", border: \".5rem solid #539987\", boxShadow: \"5px 5px 10px gray\"}} noValidate validated={validated} onSubmit={handleFormSubmit}>\n              <Form.Group className=\"p-4\">\n                  <Form.Label htmlFor=\"groupname\">Group Name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Your Group Name\"\n                      name=\"groupname\"\n                      onChange={handleInputChange}\n                      value={createGroupName.name}\n                      required\n                    />\n                  <Form.Label htmlFor=\"addfriend\">Add Friends to Your Group</Form.Label>\n                  <Form.Control as=\"select\" multiple onChange={handleUserChange}>\n                    {allUsers}\n                  </Form.Control>\n              </Form.Group>\n              <div className=\"d-flex justify-content-center\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"secondary\" >\n                      Create Group\n                  </Button>\n                </div>\n            </Form> \n          </div>\n        </div>\n      </>\n    )\n}\n","import React, {useState, useEffect } from \"react\";\nimport { fetchGroups } from '../../utils/api';\nimport { Card, Button } from 'react-bootstrap';\n\nexport default function Dashboard(props) {\n    \n    const [ groups, setGroups ] = useState([]);\n\n    const getGroupsData = async() => {\n        let groupFetch = await fetchGroups();\n        let groupFetchData = await groupFetch.json();\n        setGroups(groupFetchData);\n    }\n\n    useEffect( () => {\n        getGroupsData()\n    }, [])\n\n    const renderCard = (card, index) => {\n        return (\n            <div className=\"p-4\">\n                <Card className=\"p-3\" style={{ width: '18rem', border: \".5rem solid #539987\", boxShadow: \"5px 5px 10px gray\" }} key={index}>\n                    <Card.Body>\n                        <div className=\"row\">\n                            <div className=\"d-flex justify-content-center\">\n                                <Card.Title>{card.name}</Card.Title>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"d-flex justify-content-center\">\n                                <Button id={card._id} variant=\"secondary\" onClick={certainGroupClick}>Go to Group</Button>\n                            </div>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n\n    const createGroupclick = () => {\n        window.location.href=\"/newgroup\";\n    }\n\n    const certainGroupClick = (e) => {\n\n        const id = e.currentTarget.id;\n        const newid = id.trim()\n        window.location.href=`/group/${newid}`;\n    }\n\n        \n    \n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"p-4 d-flex justify-content-center\">\n                    <button type=\"button\" class=\"btn\" onClick={createGroupclick} style={{backgroundColor: \"#b490ca\", color: \"white\", fontWeight: \"bold\"}}>Create New Group</button>\n                </div>\n                <div className=\"row\">\n                    <div className=\"d-flex justify-content-center p-4 flex-wrap\">\n                        {groups.map(renderCard)}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { fetchGroup,  fetchChats, deleteGroup, createChat, fetchUser} from '../../utils/api';\nimport { Button, Form } from 'react-bootstrap';\nimport { useParams } from \"react-router-dom\";\nimport { MDBContainer } from \"mdbreact\";\nimport anime from 'animejs/lib/anime.es.js';\n\nexport default function Groupchat() {\n    const { id } = useParams()\n    const [ chat, setChat ] = useState([]);\n    const [ generatedContent, setgeneratedContent ] = useState([]);\n    const [ input, setInput ] = useState('');\n    const [ groupTitle, setGroupTitle ]= useState('');\n\n    anime({\n        targets: '#target',\n        translateX: [-200, 200],\n        background: ['#b490ca', '#41a19c'],\n        endDelay: 1000,\n        loop: true,\n        easing: 'easeInOutQuad',\n        direction: 'alternate'\n    });\n\n    const getChatData = async () => {\n        let chatsFetch = await fetchChats(id);\n        let chatsFetchData = await chatsFetch.json();\n        setChat(chatsFetchData);\n    }\n\n    const getUsername = async ( userid ) => {\n        let singleUser = await fetchUser(userid);\n        let singleUserData = await singleUser.json()\n        return singleUserData.username\n    }\n\n    const renderCard = async ( card, index ) => {\n        if (id !== card.group) {\n            return \n        }\n        else if ( id === card.group ) {\n            let username = await getUsername(card.user)\n            return (\n\n                <div className=\"d-flex justify-content-center\">\n                    <p>{username}: {card.body}</p> \n                </div>\n            )\n        }\n    }\n\n    const getGroupData = async () => {\n        let groupFetch = await fetchGroup(id);\n        let groupFetchData = await groupFetch.json();\n        setGroupTitle(JSON.parse(groupFetchData.name));\n    }\n\n    useEffect( async () => {\n        getChatData();\n        getGroupData();\n    }, [])\n\n    useEffect( () => {\n        Promise.all(chat.map(renderCard)).then(xyz => setgeneratedContent(xyz))\n    }, [chat])\n\n    const UpdateGroupClick = () => {\n        window.location.href=\"/editgroup/\" + id;\n    }\n\n    const deleteGroupClick = async () => {\n        const response = await deleteGroup(id) \n        window.location.href=\"/dashboard\";\n    }\n\n    const handleInput = ( e ) => {\n        setInput({...input, [e.target.name]: e.target.value});\n    }\n\n    const createChatClick = async ( e ) => {\n        e.preventDefault();\n        try {\n            await createChat({input, id});\n            window.location.href=`/group/${id}`\n        }\n        catch (err) {\n            console.error(err);\n          }\n    }\n\n    const scrollContainerStyle = { width: \"800px\", maxHeight: \"400px\" };\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"d-flex p-3 justify-content-center\">\n                    <div style={{backgroundColor: \"#b490ca\", fontSize: '40px', borderRadius: '25px', padding: '5px', color: \"white\", fontWeight: \"bold\"}} id=\"target\">{groupTitle}</div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"p-4 d-flex justify-content-center\">\n                    <button type=\"button\" className=\"btn col-lg-2 col-sm-5\" onClick={UpdateGroupClick} style={{backgroundColor: \"#b490ca\", color: \"white\", fontWeight: \"bold\"}}>Update Group</button>\n                    &nbsp;&nbsp;&nbsp;\n                    &nbsp;&nbsp;&nbsp;\n                    &nbsp;&nbsp;&nbsp;\n                    <button type=\"button\" className=\"btn col-lg-2 col-sm-5\" onClick={deleteGroupClick}  style={{backgroundColor: \"#41a19c\", color: \"white\", fontWeight: \"bold\"}}>Delete Group</button>\n                </div>\n            </div>\n            <div className=\"d-flex justify-content-flex-start\">\n                <MDBContainer>\n                    <div className=\"row scrollbar scrollbar-near-moon mt-5 mx-auto\" style={scrollContainerStyle}>\n                        <div className=''>{generatedContent.map(element=>element)}</div>\n                    </div>\n                </MDBContainer>\n            </div>\n            <div className=\"row p-4 col-md-12\">\n                <div className=\"d-flex justify-content-center\">\n                    <Form onClick={createChatClick}   className=\"p-4\" style={{ border: \".5rem solid #539987\", boxShadow: \"5px 5px 10px gray\"}}>\n                        <Form.Group className=\"mb-3\" controlId=\"sendMessageForm\">\n                            <Form.Control onChange={handleInput} name='body' type=\"text\" placeholder=\"Message\" className=\"col-4\"/>\n                        </Form.Group>\n                        <div className=\"d-flex justify-content-center\">\n                            <Button variant=\"secondary\" type=\"submit\" id=\"messageBtn\">Send Message</Button>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </>\n    )\n}","import React, {useState, useEffect } from \"react\";\nimport { fetchGroup, fetchUsers, updateGroup} from '../../utils/api';\nimport { Form, Button } from 'react-bootstrap';\nimport {useParams} from \"react-router-dom\";\n\nexport default function Updategroup(props) {\n  const [allUsers, setAllUsers]=useState([])\n  const [selectedUsers, setSelectedUsers]=useState([])\n  const [validated] = useState(false);\n  const {id} = useParams();\n  const [ groupTitle, setGroupTitle ]= useState('');\n  const [updateGroupName, setUpdateGroupName] = useState('');\n\n  useEffect( async () => {\n    let groupFetch = await fetchUsers();\n    let groupFetchData = await groupFetch.json();\n    let options =groupFetchData.map((item) => {\n      return (\n        <option key={item._id} value={item._id}>{item.username}\n        </option>\n      )\n    })\n    setAllUsers(options);\n    getGroupData()\n      \n  } ,[])\n\n  const getGroupData = async () => {\n    let groupFetch = await fetchGroup(id);\n    let groupFetchData = await groupFetch.json();\n    setGroupTitle(JSON.parse(groupFetchData.name));\n  }\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const formGroup = event.currentTarget; \n    \n    if(formGroup.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n    try {\n      var name = JSON.stringify(updateGroupName);\n      var users = selectedUsers;\n      var groupData = {name,users}\n      const response = await updateGroup( groupData,id)\n      alert(\"Group Updated!\");\n      window.location.href=`/group/${id}`;\n\n      if (!response.ok) {\n              throw new Error('something went wrong!');\n            }\n    } catch (e) {\n            console.log(\"Error\")\n      }\n      setUpdateGroupName(updateGroupName)\n      setSelectedUsers(selectedUsers)\n  }\n\n  const handleUserChange=  (event) => {\n    var options = event.target.options;\n    var value = [];\n    for (var i = 0, l = options.length; i < l; i++) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n\n    setSelectedUsers(value);\n  }\n\n    return (\n     <div class=\"p-4 d-flex justify-content-center\">\n          <Form className=\"p-4\" style={{ width: \"30rem\", border: \".5rem solid #539987\", boxShadow: \"5px 5px 10px gray\"}} noValidate validated={validated} onSubmit={handleFormSubmit}>\n            <Form.Group className=\"p-4\">\n                <Form.Label htmlFor=\"groupname\">Groupname</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder={groupTitle}\n                  onChange={(event)=> setUpdateGroupName(event.target.value)}\n                  value={updateGroupName}\n                  required\n                />\n                <Form.Label htmlFor=\"addfriend\">Add Friends to Your Group</Form.Label>\n                <Form.Control name=\"\" as=\"select\" multiple onChange={handleUserChange}>\n                  {allUsers}\n                </Form.Control>\n            </Form.Group>\n            <div className=\"d-flex justify-content-center\">\n                <Button\n                  type=\"submit\"\n                  variant=\"secondary\" >\n                  Update Group\n                </Button>\n              </div>\n          </Form>\n      </div>\n    )\n}\n","import ChatBox, { ChatFrame } from 'react-chat-plugin';\nimport { useState } from 'react';\n \nexport default function Example() {\n  const [attr, setAttr] = useState({\n    showChatbox: false,\n    showIcon: true,\n    messages: [\n      {\n        text: 'user2 has joined the conversation',\n        timestamp: 1578366389250,\n        type: 'notification',\n      },\n      {\n        author: {\n          username: 'user1',\n          id: 1,\n          avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg',\n        },\n        text: 'Hi',\n        type: 'text',\n        timestamp: 1578366393250,\n      },\n    //   {\n    //     author: { username: 'user2', id: 2, avatarUrl: null },\n    //     text: 'Show two buttons',\n    //     type: 'text',\n    //     timestamp: 1578366425250,\n    //     buttons: [\n    //       {\n    //         type: 'URL',\n    //         title: 'Yahoo',\n    //         payload: 'http://www.yahoo.com',\n    //       },\n    //       {\n    //         type: 'URL',\n    //         title: 'Example',\n    //         payload: 'http://www.example.com',\n    //       },\n    //     ],\n    //   },\n    //   {\n    //     author: {\n    //       username: 'user1',\n    //       id: 1,\n    //       avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg',\n    //     },\n    //     text: \"What's up?\",\n    //     type: 'text',\n    //     timestamp: 1578366425250,\n    //     hasError: true,\n    //   },\n    ],\n  });\n  const handleClickIcon = () => {\n    // toggle showChatbox and showIcon\n    setAttr({\n      ...attr,\n      showChatbox: !attr.showChatbox,\n      showIcon: !attr.showIcon,\n    });\n  };\n  const handleOnSendMessage = (message) => {\n    setAttr({\n      ...attr,\n      messages: attr.messages.concat({\n        author: {\n          username: 'user1',\n          id: 1,\n          avatarUrl: 'https://image.flaticon.com/icons/svg/2446/2446032.svg',\n        },\n        text: message,\n        type: 'text',\n        timestamp: +new Date(),\n      }),\n    });\n  };\n  return (\n    <ChatFrame\n      chatbox={\n        <ChatBox\n          onSendMessage={handleOnSendMessage}\n          userId={1}\n          messages={attr.messages}\n          width={'300px'}\n          showTypingIndicator={true}\n          activeAuthor={{ username: 'user2', id: 2, avatarUrl: null }}\n        />\n      }\n      \n      clickIcon={handleClickIcon}\n      showChatbox={attr.showChatbox}\n      showIcon={attr.showIcon}\n      iconStyle={{ background: 'red', fill: 'white' }}\n    >\n      <div className=\"Greeting\" style={{ width: '300px' }}>\n        👋 Hey, I’m a ChatBot! Want to see what I can do?\n      </div>\n    </ChatFrame>\n  );\n}","import {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport Signup from './Signup';\nimport Login from './Login';\nimport Header from './Header';\nimport Creategroup from './pages/Creategroup';\nimport Dashboard from './pages/Dashboard';\nimport Groupchat from './pages/Groupchat';\nimport Updategroup from './pages/Updategroup';\nimport Auth from '../utils/auth';\nimport Chat from './pages/chat';\n\nexport default function Container() {\n\n    return (\n        <div id=\"main-container\">\n          <Header />\n          <Router>\n            <Routes>\n              <Route exact path=\"/\" element={<Login />} />\n              <Route exact path=\"/chat\" element={<Chat />} />\n              <Route exact path=\"/dashboard\" element={<Dashboard />} />\n              <Route exact path='/signup' element={<Signup />} />\n              <Route exact path=\"/group/:id\" element={<Groupchat />} />\n              <Route exact path=\"/newgroup\" element={<Creategroup />} />\n              <Route exact path=\"/editgroup/:id\" element={<Updategroup />} />\n            </Routes>\n          </Router>\n        </div>\n    );\n}","import React from \"react\";\nimport Container from \"./components/Container\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => <Container />;\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}